"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[836],{7:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"integrations/n8n","title":"n8n Integration Guide","description":"Connect your n8n workflows to PrecogX for comprehensive AI security monitoring and threat detection.","source":"@site/docs/integrations/n8n.md","sourceDirName":"integrations","slug":"/integrations/n8n","permalink":"/docs/integrations/n8n","draft":false,"unlisted":false,"editUrl":"https://github.com/precogxai/precogx-docs/tree/main/docs/integrations/n8n.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Flowise Integration Guide","permalink":"/docs/integrations/flowise"},"next":{"title":"Dify Integration Guide","permalink":"/docs/integrations/dify"}}');var o=r(4848),s=r(8453);const i={},l="n8n Integration Guide",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Integration Methods",id:"integration-methods",level:2},{value:"Method 1: HTTP Request Node (Recommended)",id:"method-1-http-request-node-recommended",level:3},{value:"Step 1: Add HTTP Request Node",id:"step-1-add-http-request-node",level:4},{value:"Step 2: Configure HTTP Request Node",id:"step-2-configure-http-request-node",level:4},{value:"Step 3: Handle Errors",id:"step-3-handle-errors",level:4},{value:"Method 2: Code Node (Advanced)",id:"method-2-code-node-advanced",level:3},{value:"Common n8n AI Workflow Patterns",id:"common-n8n-ai-workflow-patterns",level:2},{value:"Pattern 1: OpenAI Chat Completion",id:"pattern-1-openai-chat-completion",level:3},{value:"Pattern 2: Anthropic Claude",id:"pattern-2-anthropic-claude",level:3},{value:"Pattern 3: Custom AI Service",id:"pattern-3-custom-ai-service",level:3},{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Email Processing Workflow",id:"email-processing-workflow",level:3},{value:"Customer Support Automation",id:"customer-support-automation",level:3},{value:"Content Generation Workflow",id:"content-generation-workflow",level:3},{value:"Environment Variables Setup",id:"environment-variables-setup",level:2},{value:"Testing Your Integration",id:"testing-your-integration",level:2},{value:"1. Test Workflow",id:"1-test-workflow",level:3},{value:"2. Verify in PrecogX Dashboard",id:"2-verify-in-precogx-dashboard",level:3},{value:"3. Monitor Execution",id:"3-monitor-execution",level:3},{value:"Error Handling Best Practices",id:"error-handling-best-practices",level:2},{value:"Graceful Failure",id:"graceful-failure",level:3},{value:"Retry Logic",id:"retry-logic",level:3},{value:"Conditional Telemetry",id:"conditional-telemetry",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Tips",id:"debug-tips",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Workflow Templates",id:"workflow-templates",level:3},{value:"Custom Agent Naming",id:"custom-agent-naming",level:3},{value:"Metadata Enrichment",id:"metadata-enrichment",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Security",id:"security",level:3},{value:"Performance",id:"performance",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Support",id:"support",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"n8n-integration-guide",children:"n8n Integration Guide"})}),"\n",(0,o.jsx)(n.p,{children:"Connect your n8n workflows to PrecogX for comprehensive AI security monitoring and threat detection."}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"n8n is a powerful workflow automation tool that helps you connect different services and automate tasks. When your n8n workflows include AI interactions, PrecogX can monitor these for security threats, prompt injections, PII leakage, and other risks in real-time."}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Active PrecogX account (",(0,o.jsx)(n.a,{href:"https://app.precogx.ai",children:"sign up free"}),")"]}),"\n",(0,o.jsx)(n.li,{children:"PrecogX API key (create in Settings \u2192 API Keys)"}),"\n",(0,o.jsx)(n.li,{children:"Running n8n instance (v0.220.0 or later)"}),"\n",(0,o.jsx)(n.li,{children:"n8n workflows that interact with AI services"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"integration-methods",children:"Integration Methods"}),"\n",(0,o.jsx)(n.h3,{id:"method-1-http-request-node-recommended",children:"Method 1: HTTP Request Node (Recommended)"}),"\n",(0,o.jsx)(n.p,{children:"Use n8n's built-in HTTP Request node to send telemetry data to PrecogX after AI interactions."}),"\n",(0,o.jsx)(n.h4,{id:"step-1-add-http-request-node",children:"Step 1: Add HTTP Request Node"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Open your n8n workflow"}),"\n",(0,o.jsxs)(n.li,{children:["Add an ",(0,o.jsx)(n.strong,{children:"HTTP Request"})," node after your AI service nodes (OpenAI, Anthropic, etc.)"]}),"\n",(0,o.jsx)(n.li,{children:"Connect it to receive data from your AI interaction"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"step-2-configure-http-request-node",children:"Step 2: Configure HTTP Request Node"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Authentication:"})," Header Auth"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Name:"})," ",(0,o.jsx)(n.code,{children:"x-api-key"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Value:"})," ",(0,o.jsx)(n.code,{children:"px_live_your_actual_api_key_here"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request Method:"})," ",(0,o.jsx)(n.code,{children:"POST"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"URL:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"https://api.precogx.ai/api/v1/integrations/n8n/telemetry\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Body (JSON):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "agentId": "{{ $node[\'AI_Service\'].json[\'workflow_name\'] || \'n8n-workflow\' }}",\n  "prompt": "{{ $node[\'AI_Service\'].json[\'prompt\'] }}",\n  "response": "{{ $node[\'AI_Service\'].json[\'response\'] }}",\n  "workflowId": "{{ $workflow.id }}",\n  "executionId": "{{ $execution.id }}",\n  "nodeId": "{{ $node[\'AI_Service\'].name }}",\n  "metadata": {\n    "timestamp": "{{ new Date().toISOString() }}",\n    "platform": "n8n",\n    "workflow_name": "{{ $workflow.name }}",\n    "execution_mode": "{{ $execution.mode }}"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"step-3-handle-errors",children:"Step 3: Handle Errors"}),"\n",(0,o.jsx)(n.p,{children:"Add error handling to prevent workflow failures:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Set ",(0,o.jsx)(n.strong,{children:"Continue on Fail"})," to ",(0,o.jsx)(n.code,{children:"true"})]}),"\n",(0,o.jsxs)(n.li,{children:["Add an ",(0,o.jsx)(n.strong,{children:"IF"})," node to check for successful telemetry"]}),"\n",(0,o.jsx)(n.li,{children:"Log errors without stopping the main workflow"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"method-2-code-node-advanced",children:"Method 2: Code Node (Advanced)"}),"\n",(0,o.jsx)(n.p,{children:"For complex scenarios, use a Code node with JavaScript:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Code Node - Send PrecogX Telemetry\nconst sendTelemetry = async (aiData) => {\n  const telemetryPayload = {\n    agentId: `n8n-${$workflow.name.replace(/\\s+/g, '-').toLowerCase()}`,\n    prompt: aiData.prompt || aiData.input || '',\n    response: aiData.response || aiData.output || '',\n    workflowId: $workflow.id,\n    executionId: $execution.id,\n    nodeId: aiData.nodeName || 'unknown',\n    metadata: {\n      timestamp: new Date().toISOString(),\n      platform: 'n8n',\n      workflow_name: $workflow.name,\n      execution_mode: $execution.mode,\n      user_id: aiData.userId || null,\n      session_id: aiData.sessionId || null\n    }\n  };\n\n  try {\n    const response = await $http.request({\n      method: 'POST',\n      url: 'https://api.precogx.ai/api/v1/integrations/n8n/telemetry',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-key': 'px_live_your_actual_api_key_here'\n      },\n      body: telemetryPayload\n    });\n\n    console.log('PrecogX telemetry sent successfully');\n    return { success: true, data: telemetryPayload };\n  } catch (error) {\n    console.error('PrecogX telemetry failed:', error.message);\n    return { success: false, error: error.message };\n  }\n};\n\n// Get AI interaction data from previous node\nconst aiData = $input.all()[0].json;\n\n// Send telemetry\nconst result = await sendTelemetry(aiData);\n\nreturn [result];\n"})}),"\n",(0,o.jsx)(n.h2,{id:"common-n8n-ai-workflow-patterns",children:"Common n8n AI Workflow Patterns"}),"\n",(0,o.jsx)(n.h3,{id:"pattern-1-openai-chat-completion",children:"Pattern 1: OpenAI Chat Completion"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "agentId": "n8n-openai-assistant",\n  "prompt": "{{ $node[\'OpenAI\'].json[\'messages\'][0][\'content\'] }}",\n  "response": "{{ $node[\'OpenAI\'].json[\'choices\'][0][\'message\'][\'content\'] }}",\n  "workflowId": "{{ $workflow.id }}",\n  "metadata": {\n    "model": "{{ $node[\'OpenAI\'].json[\'model\'] }}",\n    "tokens_used": "{{ $node[\'OpenAI\'].json[\'usage\'][\'total_tokens\'] }}",\n    "platform": "n8n-openai"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"pattern-2-anthropic-claude",children:"Pattern 2: Anthropic Claude"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "agentId": "n8n-claude-assistant",\n  "prompt": "{{ $node[\'Anthropic\'].json[\'prompt\'] }}",\n  "response": "{{ $node[\'Anthropic\'].json[\'completion\'] }}",\n  "workflowId": "{{ $workflow.id }}",\n  "metadata": {\n    "model": "{{ $node[\'Anthropic\'].json[\'model\'] }}",\n    "platform": "n8n-anthropic"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"pattern-3-custom-ai-service",children:"Pattern 3: Custom AI Service"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "agentId": "n8n-custom-ai",\n  "prompt": "{{ $node[\'Custom_AI\'].json[\'input\'] }}",\n  "response": "{{ $node[\'Custom_AI\'].json[\'output\'] }}",\n  "workflowId": "{{ $workflow.id }}",\n  "metadata": {\n    "service_name": "{{ $node[\'Custom_AI\'].json[\'service\'] }}",\n    "platform": "n8n-custom"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,o.jsx)(n.h3,{id:"email-processing-workflow",children:"Email Processing Workflow"}),"\n",(0,o.jsx)(n.p,{children:"Monitor AI that processes and responds to emails:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// In your Code node after email AI processing\nconst emailData = $node['Process_Email'].json;\n\nconst telemetryData = {\n  agentId: 'n8n-email-processor',\n  prompt: `Email Subject: ${emailData.subject}\\nEmail Body: ${emailData.body}`,\n  response: emailData.ai_response,\n  workflowId: $workflow.id,\n  executionId: $execution.id,\n  metadata: {\n    email_from: emailData.from,\n    email_subject: emailData.subject,\n    platform: 'n8n',\n    workflow_type: 'email_processing'\n  }\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"customer-support-automation",children:"Customer Support Automation"}),"\n",(0,o.jsx)(n.p,{children:"Monitor AI responses in customer support workflows:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const supportData = $node['AI_Support'].json;\n\nconst telemetryData = {\n  agentId: 'n8n-support-bot',\n  prompt: supportData.customer_message,\n  response: supportData.ai_response,\n  workflowId: $workflow.id,\n  metadata: {\n    ticket_id: supportData.ticket_id,\n    customer_id: supportData.customer_id,\n    priority: supportData.priority,\n    category: supportData.category,\n    platform: 'n8n'\n  }\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"content-generation-workflow",children:"Content Generation Workflow"}),"\n",(0,o.jsx)(n.p,{children:"Monitor AI content generation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const contentData = $node['Generate_Content'].json;\n\nconst telemetryData = {\n  agentId: 'n8n-content-generator',\n  prompt: contentData.content_brief,\n  response: contentData.generated_content,\n  workflowId: $workflow.id,\n  metadata: {\n    content_type: contentData.type,\n    target_audience: contentData.audience,\n    word_count: contentData.generated_content.split(' ').length,\n    platform: 'n8n'\n  }\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"environment-variables-setup",children:"Environment Variables Setup"}),"\n",(0,o.jsx)(n.p,{children:"For security, use n8n environment variables for your API key:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:["In your n8n environment file (",(0,o.jsx)(n.code,{children:".env"}),"):"]})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"PRECOGX_API_KEY=px_live_your_actual_api_key_here\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"In your HTTP Request node:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"{{ $env.PRECOGX_API_KEY }}\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"In Code nodes:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const apiKey = $env.PRECOGX_API_KEY;\n"})}),"\n",(0,o.jsx)(n.h2,{id:"testing-your-integration",children:"Testing Your Integration"}),"\n",(0,o.jsx)(n.h3,{id:"1-test-workflow",children:"1. Test Workflow"}),"\n",(0,o.jsx)(n.p,{children:"Create a simple test workflow:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Manual Trigger"})," \u2192 ",(0,o.jsx)(n.strong,{children:"Set"})," node (with test data) \u2192 ",(0,o.jsx)(n.strong,{children:"HTTP Request"})," (PrecogX) \u2192 ",(0,o.jsx)(n.strong,{children:"No Operation"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Test data in Set node:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "agentId": "n8n-test-agent",\n  "prompt": "This is a test prompt",\n  "response": "This is a test response",\n  "workflowId": "test-workflow",\n  "metadata": {\n    "test": true,\n    "platform": "n8n"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-verify-in-precogx-dashboard",children:"2. Verify in PrecogX Dashboard"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Execute your test workflow"}),"\n",(0,o.jsxs)(n.li,{children:["Check ",(0,o.jsx)(n.a,{href:"https://app.precogx.ai/dashboard/agents",children:"PrecogX Dashboard"})]}),"\n",(0,o.jsxs)(n.li,{children:["Look for your ",(0,o.jsx)(n.code,{children:"n8n-test-agent"})," in the agents list"]}),"\n",(0,o.jsx)(n.li,{children:"Verify interaction data appears correctly"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"3-monitor-execution",children:"3. Monitor Execution"}),"\n",(0,o.jsx)(n.p,{children:"Check n8n execution logs for:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Successful HTTP requests to PrecogX"}),"\n",(0,o.jsx)(n.li,{children:"Any error messages"}),"\n",(0,o.jsx)(n.li,{children:"Response times"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"error-handling-best-practices",children:"Error Handling Best Practices"}),"\n",(0,o.jsx)(n.h3,{id:"graceful-failure",children:"Graceful Failure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"try {\n  const response = await sendTelemetry(data);\n  console.log('Telemetry sent successfully');\n} catch (error) {\n  console.error('Telemetry failed, but continuing workflow:', error.message);\n  // Don't throw error - let workflow continue\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"retry-logic",children:"Retry Logic"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const sendTelemetryWithRetry = async (data, maxRetries = 3) => {\n  for (let i = 0; i < maxRetries; i++) {\n    try {\n      return await sendTelemetry(data);\n    } catch (error) {\n      if (i === maxRetries - 1) throw error;\n      await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1)));\n    }\n  }\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"conditional-telemetry",children:"Conditional Telemetry"}),"\n",(0,o.jsx)(n.p,{children:"Only send telemetry in production:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"if ($workflow.settings.environment === 'production') {\n  await sendTelemetry(data);\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"401 Unauthorized Error"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Check your API key is correct"}),"\n",(0,o.jsxs)(n.li,{children:["Verify the header name is exactly ",(0,o.jsx)(n.code,{children:"x-api-key"})]}),"\n",(0,o.jsx)(n.li,{children:"Ensure your PrecogX account tier supports API access"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Workflow Execution Fails"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:'Enable "Continue on Fail" for the HTTP Request node'}),"\n",(0,o.jsx)(n.li,{children:"Add error handling in Code nodes"}),"\n",(0,o.jsx)(n.li,{children:"Check n8n execution logs for details"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"No Data in PrecogX Dashboard"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Verify the endpoint URL is correct"}),"\n",(0,o.jsx)(n.li,{children:"Check the JSON payload structure"}),"\n",(0,o.jsxs)(n.li,{children:["Ensure ",(0,o.jsx)(n.code,{children:"agentId"})," is a valid string"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Performance Issues"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Consider making telemetry requests asynchronous"}),"\n",(0,o.jsx)(n.li,{children:"Implement batching for high-volume workflows"}),"\n",(0,o.jsx)(n.li,{children:"Monitor API rate limits"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"debug-tips",children:"Debug Tips"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Add logging to Code nodes:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"console.log('Sending telemetry:', JSON.stringify(telemetryData, null, 2));\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Use n8n's execution data:"})}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Check the execution list for failed runs"}),"\n",(0,o.jsx)(n.li,{children:"Examine node outputs for debugging"}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Test with curl:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://api.precogx.ai/api/v1/integrations/n8n/telemetry \\\n  -H "Content-Type: application/json" \\\n  -H "x-api-key: px_live_your_actual_api_key_here" \\\n  -d \'{"agentId":"test","prompt":"test","response":"test"}\'\n'})}),"\n",(0,o.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,o.jsx)(n.h3,{id:"workflow-templates",children:"Workflow Templates"}),"\n",(0,o.jsx)(n.p,{children:"Create reusable workflow templates with PrecogX integration:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Build a workflow with PrecogX telemetry"}),"\n",(0,o.jsx)(n.li,{children:"Export as template"}),"\n",(0,o.jsx)(n.li,{children:"Share with your team"}),"\n",(0,o.jsx)(n.li,{children:"Import and customize for different use cases"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"custom-agent-naming",children:"Custom Agent Naming"}),"\n",(0,o.jsx)(n.p,{children:"Use dynamic agent names based on workflow context:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const agentId = `n8n-${$workflow.name}-${$node['Trigger'].json['environment'] || 'prod'}`;\n"})}),"\n",(0,o.jsx)(n.h3,{id:"metadata-enrichment",children:"Metadata Enrichment"}),"\n",(0,o.jsx)(n.p,{children:"Add rich metadata for better analysis:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const metadata = {\n  platform: 'n8n',\n  workflow_id: $workflow.id,\n  workflow_name: $workflow.name,\n  execution_id: $execution.id,\n  node_name: $node.name,\n  user_id: $node['Trigger'].json['user_id'],\n  session_id: $node['Trigger'].json['session_id'],\n  timestamp: new Date().toISOString(),\n  environment: process.env.NODE_ENV || 'production'\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Use environment variables"})," for API keys"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Validate input data"})," before sending to PrecogX"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Filter sensitive information"})," from telemetry"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Enable HTTPS"})," for all API calls"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Make telemetry non-blocking"})," to avoid slowing workflows"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Implement retry logic"})," for failed requests"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Use batching"})," for high-volume scenarios"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Monitor API usage"})," to avoid rate limits"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"monitoring",children:"Monitoring"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Set up alerts"})," for failed telemetry"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Monitor workflow performance"})," impact"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Track API response times"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Review PrecogX dashboard"})," regularly"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,o.jsx)(n.p,{children:"Need help with your n8n integration?"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\ud83d\udce7 ",(0,o.jsx)(n.strong,{children:"Email"}),": ",(0,o.jsx)(n.a,{href:"mailto:support@precogx.ai",children:"support@precogx.ai"})]}),"\n",(0,o.jsxs)(n.li,{children:["\ud83d\udcac ",(0,o.jsx)(n.strong,{children:"Chat"}),": Available in your PrecogX dashboard"]}),"\n",(0,o.jsxs)(n.li,{children:["\ud83d\udcd6 ",(0,o.jsx)(n.strong,{children:"Documentation"}),": ",(0,o.jsx)(n.a,{href:"https://docs.precogx.ai",children:"docs.precogx.ai"})]}),"\n",(0,o.jsxs)(n.li,{children:["\ud83d\udc1b ",(0,o.jsx)(n.strong,{children:"Issues"}),": Report bugs on our GitHub"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"After setting up your n8n integration:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Configure Detection Rules"}),": Set up custom security rules in PrecogX"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Set Up Notifications"}),": Configure alerts for security events"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Monitor Analytics"}),": Review workflow security metrics"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Scale Your Automation"}),": Explore advanced PrecogX features"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Ready to secure your n8n AI workflows?"})," ",(0,o.jsx)(n.a,{href:"https://app.precogx.ai/signup",children:"Start your free PrecogX trial today!"})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var t=r(6540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);